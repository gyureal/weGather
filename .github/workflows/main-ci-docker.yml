name: main-ci docker version

env:  
  REGISTRY: prebird
  IMGAE_NAME: wegather
  TAG: latest
  CODE_DEPLOY_APP_NAME: weGather                 
  CODE_DEPLOY_GROUP_NAME: weGather

on:
  release:
    types: [push]
  push:
    branches: [ "main" ]
  workflow_dispatch:  # 수동으로 실행가능

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - 
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
         name: Grant run_test.sh  # test 스크립트 실행 권한 부여
         run: chmod +x ./run_test.sh
         shell: bash
#      -
#         name: test
#         run: ./run_test.sh
      - 
        name: build
        run: docker build . --file DockerfileV2 --tag ${{ env.REGISTRY}}/${{ env.IMGAE_NAME }}:${{ env.TAG }}
      -
        name: push image to dockerhub
        run: docker push ${{ env.REGISTRY}}/${{ env.IMGAE_NAME }}:${{ env.TAG }}
      -
        name: set env variables
        run: |
          export REGISTRY=${{ env.REGISTRY}}
          export IMAGE_NAME=${{ env.IMGAE_NAME }}
          export TAG=${{ env.TAG }}
      -
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2
      -
        name: get runner ip address
        id: ip
        uses: haythem/public-ip@v1.2
      -
        name: whitelist runner ip address
        run: |
          aws ec2 authorize-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
      -
        name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_ACCESS_KEY }}
          script: echo $PWD
      -
        name: revoke runner ip address
        run: |
          aws ec2 revoke-security-group-ingress \
            --group-id ${{ secrets.AWS_INSTANCE_SG_ID }} \
            --protocol tcp \
            --port 22 \
            --cidr ${{ steps.ip.outputs.ipv4 }}/32
