name: deploy # (0) GitHub Action에서 보여질 이름을 지정합니다. 

on:
  release:
    types: [push] # (1) push시 자동으로 실행됩니다.
  push:
    branches: [main] # (2) main 브랜치에서 동작합니다.
  workflow_dispatch: # (3) 수동으로도 실행이 가능힙니다.


jobs:
  build: 
    runs-on: ubuntu-latest # (4) 해당 스크립트를 작동할 OS 입니다.
    permissions: 
      contents: read 
      packages: write

    steps:
    - name: Checkout 
      uses: actions/checkout@v3  # (5) 프로젝트 코드를 CheckOut합니다.    
      
    - name: Set up JDK 11 
      uses: actions/setup-java@v3 # (6) Github Action이 실행될 OS에 Java를 설치합니다.
      with:
        java-version: '11' 
        distribution: 'temurin' 
    - name: Setup MySQL
      uses: mirromutth/mysql-action@v1.1
      with:
        host port: 3326 # Optional, default value is 3306. The port of host
        container port: 3306 # Optional, default value is 3306. The port of container
        character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
        collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
        mysql database: 'weGather' # Optional, default value is "test". The specified database which will be create
        mysql root password: 12 #${{ secrets.RootPassword }} # Required if "mysql user" is empty, default is empty. The root superuser password
        #mysql user: 'developer' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
        #mysql password: ${{ secrets.DatabasePassword }} # Required if "mysql user" exists. The password for the "mysql user"
        
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew # (7) gradle wrapper를 실행할 수 있도록 실행 권한 (+x)을 줍니다. ./gradlew를 실행하기 위함입니다.
      shell: bash

    - name: Build with Gradle
      run: ./gradlew clean build # (8) 해당 프로젝트를 build 합니다.
      shell: bash
      
    - name: Make zip file
      run: zip -r ./$PROJECT_NAME.zip .         # (12)
      shell: bash

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1      #(13)
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-2

    - name: Upload to S3
      run: aws s3 cp --region ap-northeast-2 ./$PROJECT_NAME.zip s3://$S3_BUCKET_NAME/$PROJECT_NAME/$PROJECT_NAME.zip    #(14)
